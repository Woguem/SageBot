name: SageBot CI/CD
on:
  # Trigger the workflow on push or pull request events
  # to the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
  
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - uses: actions/checkout@v3

      - name: Install ffmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: |
          PYTHONPATH=. pytest tests/
  deploy-docker-hub:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/sagebot:${{ github.sha }}

    - name: Image digest
      run: echo ${{ steps.deploy-docker-hub.outputs.digest }}
  deploy-ec2:
    needs: deploy-docker-hub
    runs-on: ubuntu-latest

    steps:
      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy Docker Image on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_DNS }} << EOF
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/sagebot:${{ github.sha }}
            sudo docker stop sagebot || true
            sudo docker rm sagebot || true
            sudo docker run -d --name sagebot -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/sagebot:${{ github.sha }}
          EOF
